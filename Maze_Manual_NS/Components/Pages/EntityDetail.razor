@page "/entitydetail/{PageId:int}"
@using Maze_Manual_NS.Services
@using Maze_Manual_NS.models
@inject ICharacterService CharacterService
@inject IItemService ItemService

<div class="entity-detail-container">
    <div class="description">
        @if (monster != null)
        {
            <h2>@monster.Name</h2>
            <p>Health: @monster.Health</p>
            <p>Damage: @monster.Damage</p>
            <br/>
            <p>@monster.Description</p>
        }
        else if (player != null)
        {
            <h2>@player.Name</h2>
            <p>Health: @player.Health</p>
            <p>Damage: @player.Damage</p>
            <br/>
            <p>@player.Description</p>
        }
        else if (weapon != null)
        {
            <h2>@weapon.ItemName</h2>
            <p>Damage: @weapon.ItemEffect</p>
            <br/>
            <p>@weapon.ItemDescription</p>
        }
        else if (potion != null)
        {
            <h2>@potion.ItemName</h2>
            <p>Health Restored: @potion.ItemEffect</p>
            <br/>
            <p>@potion.ItemDescription</p>
        }
    </div>

    <div class="image-container">
        @if (monster != null)
        {
            <img src="@monster.ImgUrl" alt="@monster.Name"/>
        }
        else if (player != null)
        {
            <img src="@player.ImgUrl" alt="@player.Name"/>
        }
        else if (weapon != null)
        {
            <img src="@weapon.ItemUrl" alt="@weapon.ItemName"/>
        }
        else if (potion != null)
        {
            <img src="@potion.ItemUrl" alt="@potion.ItemName"/>
        }
    </div>
</div>

@code
{
    [Parameter] public int PageId { get; set; }

    /// <summary>
    ///     Represents the monster entity displayed on the page.
    /// </summary>
    private Monster monster;

    /// <summary>
    ///     Represents the player entity displayed on the page.
    /// </summary>
    private Player player;

    /// <summary>
    ///     Represents the potion item displayed on the page.
    /// </summary>
    private Potion potion;

    /// <summary>
    ///     Represents the weapon item displayed on the page.
    /// </summary>
    private Weapon weapon;

    protected override void OnInitialized()
    {
        ICharacterService? entity = CharacterService.Entities.FirstOrDefault(e => e.CharacterId == PageId);

        if (entity != null)
        {
            switch (entity)
            {
                case Monster foundMonster:
                    monster = foundMonster;
                    break;
                case Player foundPlayer:
                    player = foundPlayer;
                    break;
            }
        }
        else
        {
            Item? item = ItemService.Items.FirstOrDefault(e => e.ItemId == PageId);
            switch (item)
            {
                case Potion foundPotion:
                    potion = foundPotion;
                    break;
                case Weapon foundWeapon:
                    weapon = foundWeapon;
                    break;
            }
        }
    }
}